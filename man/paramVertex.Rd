% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/paramVertex.R
\name{paramVertex}
\alias{paramVertex}
\title{Parameter estimation for Vertex dynamics}
\usage{
paramVertex(InputNetwork, VertexStatsvec = rep(1, 8), maxLag,
  VertexLag = rep(1, maxLag), VertexLagMatrix = matrix(1, maxLag,
  length(VertexStatsvec)), vertexModelGroup = NA, VertexAttLag = rep(1,
  maxLag), EdgeModelTerms, EdgeModelFormula, EdgeGroup,
  EdgeIntercept = c("edges"), EdgeExvar = NA, EdgeLag = rep(1, maxLag),
  EdgeLagMatrix = matrix(1, maxLag, length(EdgeModelTerms)),
  regMethod = "bayesglm", paramout = FALSE)
}
\arguments{
\item{InputNetwork}{list of networks.}

\item{VertexStatsvec}{binary vector of size 8.}

\item{maxLag}{maximum lag, numeric.}

\item{VertexLag}{binary vector of length maxLag.}

\item{VertexLagMatrix}{binary matrix of size maxLag x 8.}

\item{vertexModelGroup}{Grouping term for vertex model. Must be from vertex attribute list.}

\item{VertexAttLag}{Lag vector for vertex group terms. Of length maxLag.}

\item{EdgeModelTerms}{Model terms in edge model.}

\item{EdgeModelFormula}{Model formula in edge model.}

\item{EdgeGroup}{Group terms in edge model.}

\item{EdgeIntercept}{Intercept for edge model.}

\item{EdgeExvar}{Extraneous variable for edge model.}

\item{EdgeLag}{binary vector of length maxLag.}

\item{EdgeLagMatrix}{binary matrix of dim maxLag x length(EdgeModelTerms)}

\item{regMethod}{Regression method. default: "bayesglm"}

\item{paramout}{T/F Should the parameter estimates be returned?}
}
\value{
list with following elements: \cr
EdgeCoef: edge coefficients. \cr
Edgemplematfull: MPLE matrix from edges. \cr
Edgemplemat: Subsetted MPLE matrix. \cr
VertexCoef: Coefficients from vertex. \cr
Vstats: Vertex statistics matrix.\cr
EdgePredictor0: Edge predictors with imputations with 0.\cr
EdgePredictor1: Edge predictors with imputations with 1. \cr
EdgePredictorNA: Edge predictors with imputations with NA. \cr
EdgeFit: Edge model. \cr 
VertexStatsFull: Vertex statistics matrix, full. \cr
VertexFit: Vertex model. \cr
}
\description{
Parameter estimation fro dynamic vertex case. The interface remaining almost identical to the static vertex one.
}
\examples{
maxLag = 3
VertexLag = rep(1, maxLag)
VertexLagMatrix <- matrix(0, maxLag, 8)
VertexLagMatrix[, c(4, 7)] <- 1
VertexLagMatrix[c(2,3),7] <- 0

out <- paramVertex(InputNetwork = beach,
                   maxLag = 3,
                   VertexStatsvec = rep(1, 8),
                   vertexModelGroup = "regular",
                   VertexLag = rep(1, maxLag),
                   VertexLagMatrix = VertexLagMatrix,
                   EdgeModelTerms = NA,
                   EdgeModelFormula = NA,
                   EdgeGroup = NA,
                   EdgeIntercept = c("edges"),
                   paramout = TRUE)
}
\author{
Abhirup
}

