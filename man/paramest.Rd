% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/paramest.R
\name{paramest}
\alias{paramest}
\title{paramest}
\usage{
paramest(input_network, model.terms, model.formula, graph_mode = "digraph",
  group, intercept = c("edges"), exvar = NA, maxlag = 3,
  lagmat = matrix(sample(c(0, 1), (maxlag + 1) * length(model.terms), replace
  = T), ncol = cdim), ylag = rep(1, maxlag), lambda = NA,
  method = "glmnet", alpha.glmnet = 1, paramout = TRUE)
}
\arguments{
\item{input_network}{Input network.}

\item{model.terms}{model terms, must be ERGM terms expanded.}

\item{model.formula}{ERGM formula for each time point.}

\item{graph_mode}{'digraph' by default for bidirectional.}

\item{group}{grouping covariates for vertices.}

\item{intercept}{intercept terms.}

\item{exvar}{Extraneous variables}

\item{maxlag}{maximum lag.}

\item{lagmat}{Matrix of dimension (maxlag+1)x(length(model.terms))}

\item{ylag}{lag vectors of length=maxlag.}

\item{lambda}{NA}

\item{method}{Regression method, default is 'bayesglm'}

\item{alpha.glmnet}{if regularization is used. not needed for bayesglm.}

\item{paramout}{TRUE by default. if parameters are needed.}

\item{group:}{vector of strings, indicating grouping variables.}

\item{net1:}{current network}

\item{model.formula:}{user given formula}

\item{netname:}{left side network name to be used. For now, I use "net1"}

\item{intercept:}{intercept vector}

\item{grouping.edgecov:}{grouping terms from gengroup}

\item{netname:}{name of the network}

\item{model.formula:}{user given formula}

\item{netname:}{left side network name to be used. For now, I use "net1"}

\item{exterm:}{string, the term to be excluded. For now I am using 'logsize'}

\item{exterm:}{string, the term to be excluded. For now I am using 'logsize'}

\item{method:}{one of 'glmnet', 'glm' or 'bayesglm'}
}
\value{
list with elements:
  coef: coefficients
  mplematfull: full martix of change statistics
  mplemat: subset of matrix of change statistics

a vector of characters, that should be appended (+) at the begining of a formula to feed into ergm

Generate formula for feeding into ergm

formula to be fed to ergm

Generate Intercept

formula for just the intercept, to be fed to ergm

Generate formula for feeding into ergm

formula to be fed to ergm

Exclude a term from the model terms

model.terms.new

Exclude a term from the formula

term_formula.new
TODO: should support lagmatrix, and model.formula.new output?

list with elements:
       coef.edge: matrix of coeff vector for each edge
       lambda: lambda
       std.err
}
\description{
: Generates the grouping terms from the formula group variable input by the user.
}
\details{
.. content for \description{} (no empty lines) ..

.. content for \details{} ..
}
\examples{
input_network=rdNets[1:6]
model.terms=c("triadcensus.003", "triadcensus.012", "triadcensus.102", "triadcensus.021D", "gwesp");
model.formula = net~triadcensus(0:3)+gwesp(alpha=0, fixed=FALSE, cutoff=30)-1;
graph_mode='digraph';
group='dnc';
alpha.glmnet=1
directed=TRUE;
method <- 'bayesglm'
maxlag <- 3
lambda=NA
intercept = c("edges")
cdim <- length(model.terms)
lagmat <- matrix(sample(c(0,1),(maxlag+1)*cdim,replace = T),ncol = cdim)
ylag <- rep(1,maxlag)
exvar <- NA
out <- paramest(input_network,model.terms, model.formula,
                graph_mode='digraph',group,intercept = c("edges"),exvar=NA,
                maxlag = 3,
                lagmat = matrix(sample(c(0,1),(maxlag+1)*cdim,
                                       replace = T),ncol = cdim),
                ylag = rep(1,maxlag),
                lambda = NA, method='glmnet',
                alpha.glmnet=1)
}
\author{
Abhirup
}

